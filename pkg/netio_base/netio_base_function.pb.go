// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: netio_base_function.proto

package netio_base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandId int32

const (
	CommandId_IDENTIFY_HARDWARE   CommandId = 0
	CommandId_IDENTIFY_FIRMWARE   CommandId = 1
	CommandId_LOAD_FIRMWARE_CHUNK CommandId = 2
)

// Enum value maps for CommandId.
var (
	CommandId_name = map[int32]string{
		0: "IDENTIFY_HARDWARE",
		1: "IDENTIFY_FIRMWARE",
		2: "LOAD_FIRMWARE_CHUNK",
	}
	CommandId_value = map[string]int32{
		"IDENTIFY_HARDWARE":   0,
		"IDENTIFY_FIRMWARE":   1,
		"LOAD_FIRMWARE_CHUNK": 2,
	}
)

func (x CommandId) Enum() *CommandId {
	p := new(CommandId)
	*p = x
	return p
}

func (x CommandId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandId) Descriptor() protoreflect.EnumDescriptor {
	return file_netio_base_function_proto_enumTypes[0].Descriptor()
}

func (CommandId) Type() protoreflect.EnumType {
	return &file_netio_base_function_proto_enumTypes[0]
}

func (x CommandId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandId.Descriptor instead.
func (CommandId) EnumDescriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_OK                Status = 0
	Status_UNKNOWN_COMMAND   Status = 1
	Status_PROGRAMMING_ERROR Status = 2
	Status_CHUNK_SEQ_ERROR   Status = 3
	Status_NOT_COMPATIBLE    Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "UNKNOWN_COMMAND",
		2: "PROGRAMMING_ERROR",
		3: "CHUNK_SEQ_ERROR",
		4: "NOT_COMPATIBLE",
	}
	Status_value = map[string]int32{
		"OK":                0,
		"UNKNOWN_COMMAND":   1,
		"PROGRAMMING_ERROR": 2,
		"CHUNK_SEQ_ERROR":   3,
		"NOT_COMPATIBLE":    4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_netio_base_function_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_netio_base_function_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{1}
}

type SerialNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi uint64 `protobuf:"varint,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo uint64 `protobuf:"varint,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *SerialNumber) Reset() {
	*x = SerialNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netio_base_function_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerialNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialNumber) ProtoMessage() {}

func (x *SerialNumber) ProtoReflect() protoreflect.Message {
	mi := &file_netio_base_function_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerialNumber.ProtoReflect.Descriptor instead.
func (*SerialNumber) Descriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{0}
}

func (x *SerialNumber) GetHi() uint64 {
	if x != nil {
		return x.Hi
	}
	return 0
}

func (x *SerialNumber) GetLo() uint64 {
	if x != nil {
		return x.Lo
	}
	return 0
}

// LoadFirmware
// Client sends sequence of CmdLoadFirmwareChunk commands, with increasing
// chunk numbers. Clients defines chunk size.
// Server must acknowledge each chunk with Response.
// Last chunk has is_last_chunk set to True, so server knows that programming has finished
type CmdLoadFirmwareChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkNumber uint32 `protobuf:"varint,1,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"`
	IsLastChunk bool   `protobuf:"varint,2,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	Data        []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CmdLoadFirmwareChunk) Reset() {
	*x = CmdLoadFirmwareChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netio_base_function_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdLoadFirmwareChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdLoadFirmwareChunk) ProtoMessage() {}

func (x *CmdLoadFirmwareChunk) ProtoReflect() protoreflect.Message {
	mi := &file_netio_base_function_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdLoadFirmwareChunk.ProtoReflect.Descriptor instead.
func (*CmdLoadFirmwareChunk) Descriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{1}
}

func (x *CmdLoadFirmwareChunk) GetChunkNumber() uint32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *CmdLoadFirmwareChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

func (x *CmdLoadFirmwareChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResIdentifyHardware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootArticle  string        `protobuf:"bytes,1,opt,name=root_article,json=rootArticle,proto3" json:"root_article,omitempty"`
	MajorVersion uint32        `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	SerialNumber *SerialNumber `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *ResIdentifyHardware) Reset() {
	*x = ResIdentifyHardware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netio_base_function_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIdentifyHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIdentifyHardware) ProtoMessage() {}

func (x *ResIdentifyHardware) ProtoReflect() protoreflect.Message {
	mi := &file_netio_base_function_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIdentifyHardware.ProtoReflect.Descriptor instead.
func (*ResIdentifyHardware) Descriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{2}
}

func (x *ResIdentifyHardware) GetRootArticle() string {
	if x != nil {
		return x.RootArticle
	}
	return ""
}

func (x *ResIdentifyHardware) GetMajorVersion() uint32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *ResIdentifyHardware) GetSerialNumber() *SerialNumber {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

type ResIdentifyFirmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MajorVersion uint32 `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion uint32 `protobuf:"varint,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	PatchVersion uint32 `protobuf:"varint,4,opt,name=patch_version,json=patchVersion,proto3" json:"patch_version,omitempty"`
}

func (x *ResIdentifyFirmware) Reset() {
	*x = ResIdentifyFirmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netio_base_function_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIdentifyFirmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIdentifyFirmware) ProtoMessage() {}

func (x *ResIdentifyFirmware) ProtoReflect() protoreflect.Message {
	mi := &file_netio_base_function_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIdentifyFirmware.ProtoReflect.Descriptor instead.
func (*ResIdentifyFirmware) Descriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{3}
}

func (x *ResIdentifyFirmware) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResIdentifyFirmware) GetMajorVersion() uint32 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *ResIdentifyFirmware) GetMinorVersion() uint32 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

func (x *ResIdentifyFirmware) GetPatchVersion() uint32 {
	if x != nil {
		return x.PatchVersion
	}
	return 0
}

// The common messages
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id CommandId `protobuf:"varint,1,opt,name=id,proto3,enum=NetioBaseFunction.CommandId" json:"id,omitempty"`
	// Types that are assignable to Data:
	//	*Command_LoadFirmwareChunk
	Data isCommand_Data `protobuf_oneof:"data"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netio_base_function_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_netio_base_function_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{4}
}

func (x *Command) GetId() CommandId {
	if x != nil {
		return x.Id
	}
	return CommandId_IDENTIFY_HARDWARE
}

func (m *Command) GetData() isCommand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Command) GetLoadFirmwareChunk() *CmdLoadFirmwareChunk {
	if x, ok := x.GetData().(*Command_LoadFirmwareChunk); ok {
		return x.LoadFirmwareChunk
	}
	return nil
}

type isCommand_Data interface {
	isCommand_Data()
}

type Command_LoadFirmwareChunk struct {
	LoadFirmwareChunk *CmdLoadFirmwareChunk `protobuf:"bytes,2,opt,name=load_firmware_chunk,json=loadFirmwareChunk,proto3,oneof"`
}

func (*Command_LoadFirmwareChunk) isCommand_Data() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     CommandId `protobuf:"varint,1,opt,name=id,proto3,enum=NetioBaseFunction.CommandId" json:"id,omitempty"`
	Status Status    `protobuf:"varint,2,opt,name=status,proto3,enum=NetioBaseFunction.Status" json:"status,omitempty"`
	// Types that are assignable to Data:
	//	*Response_IdentifyHardware
	//	*Response_IdentifyFirmware
	Data isResponse_Data `protobuf_oneof:"data"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netio_base_function_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_netio_base_function_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_netio_base_function_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetId() CommandId {
	if x != nil {
		return x.Id
	}
	return CommandId_IDENTIFY_HARDWARE
}

func (x *Response) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (m *Response) GetData() isResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Response) GetIdentifyHardware() *ResIdentifyHardware {
	if x, ok := x.GetData().(*Response_IdentifyHardware); ok {
		return x.IdentifyHardware
	}
	return nil
}

func (x *Response) GetIdentifyFirmware() *ResIdentifyFirmware {
	if x, ok := x.GetData().(*Response_IdentifyFirmware); ok {
		return x.IdentifyFirmware
	}
	return nil
}

type isResponse_Data interface {
	isResponse_Data()
}

type Response_IdentifyHardware struct {
	IdentifyHardware *ResIdentifyHardware `protobuf:"bytes,3,opt,name=identify_hardware,json=identifyHardware,proto3,oneof"`
}

type Response_IdentifyFirmware struct {
	IdentifyFirmware *ResIdentifyFirmware `protobuf:"bytes,4,opt,name=identify_firmware,json=identifyFirmware,proto3,oneof"`
}

func (*Response_IdentifyHardware) isResponse_Data() {}

func (*Response_IdentifyFirmware) isResponse_Data() {}

var File_netio_base_function_proto protoreflect.FileDescriptor

var file_netio_base_function_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x65, 0x74, 0x69, 0x6f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x4e, 0x65, 0x74,
	0x69, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x68, 0x69, 0x12, 0x0e,
	0x0a, 0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x6c, 0x6f, 0x22, 0x71,
	0x0a, 0x14, 0x43, 0x6d, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72,
	0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x6f,
	0x74, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4e, 0x65, 0x74, 0x69, 0x6f,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x4e, 0x65, 0x74,
	0x69, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x13,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x69,
	0x6f, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6d,
	0x64, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x4e, 0x65, 0x74, 0x69, 0x6f,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x4e, 0x65, 0x74,
	0x69, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a,
	0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x65, 0x74, 0x69, 0x6f,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x48, 0x00, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x4e, 0x65, 0x74, 0x69, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x79, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x2a, 0x52, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x11, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x48, 0x41, 0x52,
	0x44, 0x57, 0x41, 0x52, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x46, 0x59, 0x5f, 0x46, 0x49, 0x52, 0x4d, 0x57, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x4d, 0x57, 0x41, 0x52, 0x45, 0x5f,
	0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x02, 0x2a, 0x65, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48, 0x55, 0x4e, 0x4b, 0x5f, 0x53,
	0x45, 0x51, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x42, 0x10,
	0x5a, 0x0e, 0x70, 0x6b, 0x67, 0x2f, 0x6e, 0x65, 0x74, 0x69, 0x6f, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_netio_base_function_proto_rawDescOnce sync.Once
	file_netio_base_function_proto_rawDescData = file_netio_base_function_proto_rawDesc
)

func file_netio_base_function_proto_rawDescGZIP() []byte {
	file_netio_base_function_proto_rawDescOnce.Do(func() {
		file_netio_base_function_proto_rawDescData = protoimpl.X.CompressGZIP(file_netio_base_function_proto_rawDescData)
	})
	return file_netio_base_function_proto_rawDescData
}

var file_netio_base_function_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_netio_base_function_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_netio_base_function_proto_goTypes = []interface{}{
	(CommandId)(0),               // 0: NetioBaseFunction.CommandId
	(Status)(0),                  // 1: NetioBaseFunction.Status
	(*SerialNumber)(nil),         // 2: NetioBaseFunction.SerialNumber
	(*CmdLoadFirmwareChunk)(nil), // 3: NetioBaseFunction.CmdLoadFirmwareChunk
	(*ResIdentifyHardware)(nil),  // 4: NetioBaseFunction.ResIdentifyHardware
	(*ResIdentifyFirmware)(nil),  // 5: NetioBaseFunction.ResIdentifyFirmware
	(*Command)(nil),              // 6: NetioBaseFunction.Command
	(*Response)(nil),             // 7: NetioBaseFunction.Response
}
var file_netio_base_function_proto_depIdxs = []int32{
	2, // 0: NetioBaseFunction.ResIdentifyHardware.serial_number:type_name -> NetioBaseFunction.SerialNumber
	0, // 1: NetioBaseFunction.Command.id:type_name -> NetioBaseFunction.CommandId
	3, // 2: NetioBaseFunction.Command.load_firmware_chunk:type_name -> NetioBaseFunction.CmdLoadFirmwareChunk
	0, // 3: NetioBaseFunction.Response.id:type_name -> NetioBaseFunction.CommandId
	1, // 4: NetioBaseFunction.Response.status:type_name -> NetioBaseFunction.Status
	4, // 5: NetioBaseFunction.Response.identify_hardware:type_name -> NetioBaseFunction.ResIdentifyHardware
	5, // 6: NetioBaseFunction.Response.identify_firmware:type_name -> NetioBaseFunction.ResIdentifyFirmware
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_netio_base_function_proto_init() }
func file_netio_base_function_proto_init() {
	if File_netio_base_function_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_netio_base_function_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerialNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netio_base_function_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdLoadFirmwareChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netio_base_function_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIdentifyHardware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netio_base_function_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIdentifyFirmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netio_base_function_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netio_base_function_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_netio_base_function_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Command_LoadFirmwareChunk)(nil),
	}
	file_netio_base_function_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Response_IdentifyHardware)(nil),
		(*Response_IdentifyFirmware)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_netio_base_function_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_netio_base_function_proto_goTypes,
		DependencyIndexes: file_netio_base_function_proto_depIdxs,
		EnumInfos:         file_netio_base_function_proto_enumTypes,
		MessageInfos:      file_netio_base_function_proto_msgTypes,
	}.Build()
	File_netio_base_function_proto = out.File
	file_netio_base_function_proto_rawDesc = nil
	file_netio_base_function_proto_goTypes = nil
	file_netio_base_function_proto_depIdxs = nil
}
